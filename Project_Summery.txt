                                      AMAZON_E2E_AUTOMATION

## Project Name:
Amazon_E2E Automation

## Test Scenario:
Automating the **end-to-end purchasing process** on **Amazon**, covering:
✅ Login
✅ Product Search
✅ Adding to Cart
✅ Checkout (Up to the Payment Page)

## Technologies Used:
✅ Programming Language: Python 🐍
✅ Automation Tool: Selenium WebDriver 🌐
✅ Framework: Page Object Model (POM)
✅ Test Runner: Pytest 🧪

## Framework Overview
This project follows the **Page Object Model (POM)** with **pytest** for structured and reusable test automation.



## 📂 Project Structure:
Amazon_E2E
│── conftest.py             # Pytest setup & teardown
│── requirements.txt        # Dependencies
│── tests                   # Test cases directory
│   └── TestE2E.py          # Main E2E test case
│── pages                   # Page Locators
│   ├── HomePageLocators.py
│   ├── LoginPageLocators.py
│── utils                   # Utilities (Test Data & Helper Methods)
│   ├── ItemsLocators.py
│   ├── UtilitiesLocators.py
└── venv                    # Virtual environment


## Test Case Steps

### 1️⃣ **Login**
1. Open Amazon's homepage using `driver.get('url')`.
2. Click on the **Sign-in** button.
3. Enter **Email** and click **Continue**.
4. Enter **Password** and click **Sign-in**.

### 2️⃣ **Adding Item to Cart**
1. Search for an **item** in the search bar.
2. Select the **first item** from search results.
3. Click **Add to Cart**.

### 3️⃣ **Checkout Process**
1. Click on the **Cart** button.
2. Click on the **Proceed to Checkout** button.
3. If an **Amazon Prime subscription popup** appears, handle it.
4. Choose **COD (Cash on Delivery)** as the payment method.
5. Click **Confirm Purchase**.

## Key Features
✅ **Page Object Model (POM)** for maintainability.
✅ **Pytest Integration** for structured execution.
✅ **Exception Handling** for Prime popups.
✅ **Scalable Test Cases** with reusable locators.

## Next Steps
- Add **Logging & Reporting** (`pytest-html`, `Allure`).
- Capture **Screenshots on Failure**.
- Add **Assertions** to validate each step.

---

                                                                                                **Thanks & Regards,**
                                                                                                S. Enay Kumar